<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.nunesd66.ecommerce.mapeamentoavancado.SalvandoArquivoTest" time="0.676" tests="2" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/home/daniel/IdeaProjects/algaworks_jpa/algaworks-ecommerce/target/test-classes:/home/daniel/IdeaProjects/algaworks_jpa/algaworks-ecommerce/target/classes:/home/daniel/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar:/home/daniel/.m2/repository/org/hibernate/orm/hibernate-core/6.2.2.Final/hibernate-core-6.2.2.Final.jar:/home/daniel/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/home/daniel/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/home/daniel/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/home/daniel/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/home/daniel/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/home/daniel/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/home/daniel/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/home/daniel/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/home/daniel/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/home/daniel/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/home/daniel/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/home/daniel/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/home/daniel/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/home/daniel/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/home/daniel/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/home/daniel/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar:/home/daniel/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/home/daniel/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/home/daniel/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.9.3/junit-jupiter-engine-5.9.3.jar:/home/daniel/.m2/repository/org/junit/platform/junit-platform-engine/1.9.3/junit-platform-engine-1.9.3.jar:/home/daniel/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/daniel/.m2/repository/org/junit/platform/junit-platform-commons/1.9.3/junit-platform-commons-1.9.3.jar:/home/daniel/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.3/junit-jupiter-api-5.9.3.jar:/home/daniel/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:"/>
    <property name="java.vm.vendor" value="Amazon.com Inc."/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://aws.amazon.com/corretto/"/>
    <property name="user.timezone" value="America/Sao_Paulo"/>
    <property name="os.name" value="Linux"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="BR"/>
    <property name="sun.boot.library.path" value="/home/daniel/.jdks/corretto-17.0.10/lib"/>
    <property name="sun.java.command" value="/home/daniel/IdeaProjects/algaworks_jpa/algaworks-ecommerce/target/surefire/surefirebooter-20240319184527088_3.jar /home/daniel/IdeaProjects/algaworks_jpa/algaworks-ecommerce/target/surefire 2024-03-19T18-45-27_016-jvmRun1 surefire-20240319184527088_1tmp surefire_0-20240319184527088_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/home/daniel/IdeaProjects/algaworks_jpa/algaworks-ecommerce/target/test-classes:/home/daniel/IdeaProjects/algaworks_jpa/algaworks-ecommerce/target/classes:/home/daniel/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar:/home/daniel/.m2/repository/org/hibernate/orm/hibernate-core/6.2.2.Final/hibernate-core-6.2.2.Final.jar:/home/daniel/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/home/daniel/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/home/daniel/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/home/daniel/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/home/daniel/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/home/daniel/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/home/daniel/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/home/daniel/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/home/daniel/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/home/daniel/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/home/daniel/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/home/daniel/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/home/daniel/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/home/daniel/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/home/daniel/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/home/daniel/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar:/home/daniel/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/home/daniel/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/home/daniel/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.9.3/junit-jupiter-engine-5.9.3.jar:/home/daniel/.m2/repository/org/junit/platform/junit-platform-engine/1.9.3/junit-platform-engine-1.9.3.jar:/home/daniel/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/daniel/.m2/repository/org/junit/platform/junit-platform-commons/1.9.3/junit-platform-commons-1.9.3.jar:/home/daniel/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.3/junit-jupiter-api-5.9.3.jar:/home/daniel/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/daniel"/>
    <property name="user.language" value="pt"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2024-01-16"/>
    <property name="java.home" value="/home/daniel/.jdks/corretto-17.0.10"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/home/daniel/IdeaProjects/algaworks_jpa/algaworks-ecommerce"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="surefire.real.class.path" value="/home/daniel/IdeaProjects/algaworks_jpa/algaworks-ecommerce/target/surefire/surefirebooter-20240319184527088_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="17.0.10+8-LTS"/>
    <property name="user.name" value="daniel"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="6.5.0-25-generic"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Corretto-17.0.10.8.1"/>
    <property name="localRepository" value="/home/daniel/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/corretto/corretto-17/issues/"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="idea.version" value="2023.3.5"/>
    <property name="java.version" value="17.0.10"/>
    <property name="user.dir" value="/home/daniel/IdeaProjects/algaworks_jpa/algaworks-ecommerce"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Amazon.com Inc."/>
    <property name="java.vm.version" value="17.0.10+8-LTS"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="61.0"/>
  </properties>
  <testcase name="salvarXmlNota" classname="com.nunesd66.ecommerce.mapeamentoavancado.SalvandoArquivoTest" time="0.01">
    <system-out><![CDATA[Hibernate: 
    alter table categoria 
       drop 
       foreign key fk_categoria_categoriapai
Hibernate: 
    alter table cliente_contato 
       drop 
       foreign key fk_cliente_contrato_cliente
Hibernate: 
    alter table cliente_detalhe 
       drop 
       foreign key fk_cliente_detalhe_cliente
Hibernate: 
    alter table estoque 
       drop 
       foreign key fk_estoque_produto
Hibernate: 
    alter table item_pedido 
       drop 
       foreign key fk_item_pedido_pedido
Hibernate: 
    alter table item_pedido 
       drop 
       foreign key fk_item_pedido_produto
Hibernate: 
    alter table nota_fiscal 
       drop 
       foreign key fk_nota_fiscal_pedido
Hibernate: 
    alter table pagamento 
       drop 
       foreign key fk_pagamento_pedido
Hibernate: 
    alter table pedido 
       drop 
       foreign key fk_pedido_cliente
Hibernate: 
    alter table produto_atributo 
       drop 
       foreign key fk_produto_atributo_produto
Hibernate: 
    alter table produto_categoria 
       drop 
       foreign key fk_produto_categoria_categoria
Hibernate: 
    alter table produto_categoria 
       drop 
       foreign key fk_produto_categoria_produto
Hibernate: 
    alter table produto_tag 
       drop 
       foreign key fk_produto_tag_produto
Hibernate: 
    drop table if exists categoria
Hibernate: 
    drop table if exists cliente
Hibernate: 
    drop table if exists cliente_contato
Hibernate: 
    drop table if exists cliente_detalhe
Hibernate: 
    drop table if exists estoque
Hibernate: 
    drop table if exists item_pedido
Hibernate: 
    drop table if exists nota_fiscal
Hibernate: 
    drop table if exists pagamento
Hibernate: 
    drop table if exists pedido
Hibernate: 
    drop table if exists produto
Hibernate: 
    drop table if exists produto_atributo
Hibernate: 
    drop table if exists produto_categoria
Hibernate: 
    drop table if exists produto_tag
Hibernate: 
    drop table if exists testando
Hibernate: 
    create table categoria (
        categoria_pai_id integer,
        id integer not null auto_increment,
        nome varchar(100) not null,
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    create table cliente (
        id integer not null auto_increment,
        cpf varchar(14) not null,
        nome varchar(100) not null,
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    create table cliente_contato (
        cliente_id integer not null,
        descricao varchar(255),
        tipo varchar(255) not null,
        primary key (cliente_id, tipo)
    ) engine=InnoDB
Hibernate: 
    create table cliente_detalhe (
        cliente_id integer not null,
        data_nascimento date,
        sexo enum ('FEMININO','MASCULINO') not null,
        primary key (cliente_id)
    ) engine=InnoDB
Hibernate: 
    create table estoque (
        id integer not null auto_increment,
        produto_id integer not null,
        quantidade integer,
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    create table item_pedido (
        pedido_id integer not null,
        preco_produto decimal(38,2) not null,
        produto_id integer not null,
        quantidade integer not null,
        primary key (pedido_id, produto_id)
    ) engine=InnoDB
Hibernate: 
    create table nota_fiscal (
        pedido_id integer not null,
        data_emissao datetime(6) not null,
        xml blob not null,
        primary key (pedido_id)
    ) engine=InnoDB
Hibernate: 
    create table pagamento (
        pedido_id integer not null,
        status enum ('CANCELADO','PROCESSANDO','RECEBIDO') not null,
        tipo_pagamento varchar(31) not null,
        numero_cartao varchar(50),
        codigo_barras varchar(100),
        primary key (pedido_id)
    ) engine=InnoDB
Hibernate: 
    create table pedido (
        cliente_id integer not null,
        estado varchar(2),
        id integer not null auto_increment,
        total decimal(38,2) not null,
        data_conclusao datetime(6),
        data_criacao datetime(6) not null,
        data_ultima_atualizacao datetime(6),
        cep varchar(9),
        numero varchar(10),
        status enum ('AGUARDANDO','CANCELADO','PAGO') not null,
        bairro varchar(50),
        cidade varchar(50),
        complemento varchar(50),
        logradouro varchar(100),
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    create table produto (
        id integer not null auto_increment,
        preco decimal(38,2),
        data_criacao datetime(6) not null,
        data_ultima_atualizacao datetime(6),
        nome varchar(100) not null,
        descricao longtext,
        foto blob,
        primary key (id)
    ) engine=InnoDB
Hibernate: 
    create table produto_atributo (
        produto_id integer not null,
        nome varchar(100) not null,
        valor varchar(255)
    ) engine=InnoDB
Hibernate: 
    create table produto_categoria (
        categoria_id integer not null,
        produto_id integer not null
    ) engine=InnoDB
Hibernate: 
    create table produto_tag (
        produto_id integer not null,
        tag varchar(50) not null
    ) engine=InnoDB
Hibernate: 
    alter table categoria 
       add constraint unq_nome unique (nome)
Hibernate: 
    create index idx_nome 
       on cliente (nome)
Hibernate: 
    alter table cliente 
       add constraint unq_cpf unique (cpf)
Hibernate: 
    alter table estoque 
       add constraint UK_g72w2sa50w9a647f0eyhogus5 unique (produto_id)
Hibernate: 
    create index idx_nome 
       on produto (nome)
Hibernate: 
    alter table produto 
       add constraint unq_nome unique (nome)
Hibernate: 
    alter table categoria 
       add constraint fk_categoria_categoriapai 
       foreign key (categoria_pai_id) 
       references categoria (id)
Hibernate: 
    alter table cliente_contato 
       add constraint fk_cliente_contrato_cliente 
       foreign key (cliente_id) 
       references cliente (id)
Hibernate: 
    alter table cliente_detalhe 
       add constraint fk_cliente_detalhe_cliente 
       foreign key (cliente_id) 
       references cliente (id)
Hibernate: 
    alter table estoque 
       add constraint fk_estoque_produto 
       foreign key (produto_id) 
       references produto (id)
Hibernate: 
    alter table item_pedido 
       add constraint fk_item_pedido_pedido 
       foreign key (pedido_id) 
       references pedido (id)
Hibernate: 
    alter table item_pedido 
       add constraint fk_item_pedido_produto 
       foreign key (produto_id) 
       references produto (id)
Hibernate: 
    alter table nota_fiscal 
       add constraint fk_nota_fiscal_pedido 
       foreign key (pedido_id) 
       references pedido (id)
Hibernate: 
    alter table pagamento 
       add constraint fk_pagamento_pedido 
       foreign key (pedido_id) 
       references pedido (id)
Hibernate: 
    alter table pedido 
       add constraint fk_pedido_cliente 
       foreign key (cliente_id) 
       references cliente (id)
Hibernate: 
    alter table produto_atributo 
       add constraint fk_produto_atributo_produto 
       foreign key (produto_id) 
       references produto (id)
Hibernate: 
    alter table produto_categoria 
       add constraint fk_produto_categoria_categoria 
       foreign key (categoria_id) 
       references categoria (id)
Hibernate: 
    alter table produto_categoria 
       add constraint fk_produto_categoria_produto 
       foreign key (produto_id) 
       references produto (id)
Hibernate: 
    alter table produto_tag 
       add constraint fk_produto_tag_produto 
       foreign key (produto_id) 
       references produto (id)
Hibernate: 
    create table testando (
        id integer not null auto_increment,
        primary key (id)
    ) engine=InnoDB
Hibernate: insert into produto (id, nome, preco, data_criacao, descricao) values (1, 'Kindle', 499.0, date_sub(sysdate(), interval 1 day), 'Conheça o novo Kindle, agora com iluminação embutida ajustável, que permite que você leia em ambientes abertos ou fechados, a qualquer hora do dia.')
Hibernate: insert into produto (id, nome, preco, data_criacao, descricao) values (3, 'Câmera GoPro Hero 7', 1400.0, date_sub(sysdate(), interval 1 day), 'Desempenho 2x melhor.')
Hibernate: insert into cliente (id, nome, cpf) values (1, 'Fernando Medeiros', '000')
Hibernate: insert into cliente (id, nome, cpf) values (2, 'Marcos Mariano', '111')
Hibernate: insert into cliente_detalhe (cliente_id, sexo, data_nascimento) values (1, 'MASCULINO', date_sub(sysdate(), interval 27 year))
Hibernate: insert into cliente_detalhe (cliente_id, sexo, data_nascimento) values (2, 'MASCULINO', date_sub(sysdate(), interval 30 year))
Hibernate: insert into pedido (id, cliente_id, data_criacao, total, status) values (1, 1, sysdate(), 998.0, 'AGUARDANDO')
Hibernate: insert into pedido (id, cliente_id, data_criacao, total, status) values (2, 1, sysdate(), 499.0, 'AGUARDANDO')
Hibernate: insert into item_pedido (pedido_id, produto_id, preco_produto, quantidade) values (1, 1, 499, 2)
Hibernate: insert into item_pedido (pedido_id, produto_id, preco_produto, quantidade) values (1, 3, 1400, 1)
Hibernate: insert into item_pedido (pedido_id, produto_id, preco_produto, quantidade) values (2, 1, 499, 1)
Hibernate: insert into pagamento (pedido_id, status, tipo_pagamento, numero_cartao, codigo_barras) values (2, 'PROCESSANDO', 'cartao', '123', null)
Hibernate: insert into categoria (id, nome) values (1, 'Eletrodomésticos')
Hibernate: insert into categoria (id, nome) values (2, 'Livros')
Hibernate: insert into produto_categoria (produto_id, categoria_id) values (1, 2)
Hibernate: 
    select
        p1_0.id,
        p1_0.cliente_id,
        c1_0.id,
        c1_0.cpf,
        c1_0.nome,
        c1_1.data_nascimento,
        c1_1.sexo,
        p1_0.data_conclusao,
        p1_0.data_criacao,
        p1_0.data_ultima_atualizacao,
        p1_0.bairro,
        p1_0.cep,
        p1_0.cidade,
        p1_0.complemento,
        p1_0.estado,
        p1_0.logradouro,
        p1_0.numero,
        n1_0.pedido_id,
        n1_0.data_emissao,
        n1_0.xml,
        p3_0.pedido_id,
        p3_0.tipo_pagamento,
        p3_0.status,
        p3_0.codigo_barras,
        p3_0.numero_cartao,
        p1_0.status,
        p1_0.total 
    from
        pedido p1_0 
    join
        (cliente c1_0 
    left join
        cliente_detalhe c1_1 
            on c1_0.id=c1_1.cliente_id) 
                on c1_0.id=p1_0.cliente_id 
        left join
            nota_fiscal n1_0 
                on p1_0.id=n1_0.pedido_id 
        left join
            pagamento p3_0 
                on p1_0.id=p3_0.pedido_id 
        where
            p1_0.id=?
Entidade Pedido foi carregada.
Após carregar a entidade.
Hibernate: 
    insert 
    into
        nota_fiscal
        (data_emissao,xml,pedido_id) 
    values
        (?,?,?)
Hibernate: 
    select
        n1_0.pedido_id,
        n1_0.data_emissao,
        p1_0.id,
        p1_0.cliente_id,
        c1_0.id,
        c1_0.cpf,
        c1_0.nome,
        c1_1.data_nascimento,
        c1_1.sexo,
        p1_0.data_conclusao,
        p1_0.data_criacao,
        p1_0.data_ultima_atualizacao,
        p1_0.bairro,
        p1_0.cep,
        p1_0.cidade,
        p1_0.complemento,
        p1_0.estado,
        p1_0.logradouro,
        p1_0.numero,
        p2_0.pedido_id,
        p2_0.tipo_pagamento,
        p2_0.status,
        p2_0.codigo_barras,
        p2_0.numero_cartao,
        p1_0.status,
        p1_0.total,
        n1_0.xml 
    from
        nota_fiscal n1_0 
    join
        pedido p1_0 
            on p1_0.id=n1_0.pedido_id 
    left join
        (cliente c1_0 
    left join
        cliente_detalhe c1_1 
            on c1_0.id=c1_1.cliente_id) 
                on c1_0.id=p1_0.cliente_id 
        left join
            pagamento p2_0 
                on p1_0.id=p2_0.pedido_id 
        where
            n1_0.pedido_id=?
Entidade Pedido foi carregada.
Após carregar a entidade.
]]></system-out>
    <system-err><![CDATA[mar. 19, 2024 6:45:43 PM org.hibernate.jpa.internal.util.LogHelper logPersistenceUnitInformation
INFO: HHH000204: Processing PersistenceUnitInfo [name: Ecommerce-PU]
mar. 19, 2024 6:45:43 PM org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
WARN: HHH10001002: Using built-in connection pool (not intended for production use)
mar. 19, 2024 6:45:43 PM org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl buildCreator
INFO: HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
mar. 19, 2024 6:45:43 PM org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl buildCreator
INFO: HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/algaworks_ecommerce?createDatabaseIfNotExist=true&useTimezone=true&serverTimezone=UTC]
mar. 19, 2024 6:45:43 PM org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl buildCreator
INFO: HHH10001001: Connection properties: {password=****, user=root}
mar. 19, 2024 6:45:43 PM org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl buildCreator
INFO: HHH10001003: Autocommit mode: false
mar. 19, 2024 6:45:43 PM org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections <init>
INFO: HHH10001115: Connection pool size: 20 (min=1)
mar. 19, 2024 6:45:43 PM org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl logSelectedDialect
INFO: HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.3
mar. 19, 2024 6:45:43 PM org.hibernate.bytecode.internal.BytecodeProviderInitiator buildBytecodeProvider
INFO: HHH000021: Bytecode provider name : bytebuddy
mar. 19, 2024 6:45:43 PM org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator initiateService
INFO: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
mar. 19, 2024 6:45:43 PM org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator getConfigurationValue
WARN: HHH90000021: Encountered deprecated setting [jakarta.persistence.schema-generation.drop-script-source], use [javax.persistence.schema-generation.drop-script-source] instead
mar. 19, 2024 6:45:43 PM org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator getConfigurationValue
WARN: HHH90000021: Encountered deprecated setting [jakarta.persistence.schema-generation.drop-source], use [javax.persistence.schema-generation.drop-source] instead
mar. 19, 2024 6:45:43 PM org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl getIsolatedConnection
INFO: HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1966ec08] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
mar. 19, 2024 6:45:43 PM org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase beforeScript
INFO: HHH000476: Executing script 'file:/home/daniel/IdeaProjects/algaworks_jpa/algaworks-ecommerce/target/classes/META-INF/banco-de-dados/script-remocao.sql'
mar. 19, 2024 6:45:43 PM org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator getConfigurationValue
WARN: HHH90000021: Encountered deprecated setting [jakarta.persistence.schema-generation.create-script-source], use [javax.persistence.schema-generation.create-script-source] instead
mar. 19, 2024 6:45:43 PM org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator getConfigurationValue
WARN: HHH90000021: Encountered deprecated setting [jakarta.persistence.schema-generation.create-source], use [javax.persistence.schema-generation.create-source] instead
mar. 19, 2024 6:45:43 PM org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl getIsolatedConnection
INFO: HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@46e052e5] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
mar. 19, 2024 6:45:43 PM org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase beforeScript
INFO: HHH000476: Executing script 'file:/home/daniel/IdeaProjects/algaworks_jpa/algaworks-ecommerce/target/classes/META-INF/banco-de-dados/script-criacao.sql'
mar. 19, 2024 6:45:43 PM org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase beforeScript
INFO: HHH000476: Executing script 'file:/home/daniel/IdeaProjects/algaworks_jpa/algaworks-ecommerce/target/classes/META-INF/banco-de-dados/dados-iniciais.sql'
mar. 19, 2024 6:45:43 PM org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase beforeScript
INFO: HHH000476: Executing script '[injected ScriptSourceInputNonExistentImpl script]'
]]></system-err>
  </testcase>
  <testcase name="salvarProduto" classname="com.nunesd66.ecommerce.mapeamentoavancado.SalvandoArquivoTest" time="0.006">
    <system-out><![CDATA[Hibernate: 
    insert 
    into
        produto
        (data_criacao,descricao,foto,nome,preco) 
    values
        (?,?,?,?,?)
Hibernate: 
    select
        p1_0.id,
        p1_0.data_criacao,
        p1_0.data_ultima_atualizacao,
        p1_0.descricao,
        e1_0.id,
        e1_0.produto_id,
        e1_0.quantidade,
        p1_0.foto,
        p1_0.nome,
        p1_0.preco 
    from
        produto p1_0 
    left join
        estoque e1_0 
            on p1_0.id=e1_0.produto_id 
    where
        p1_0.id=?
Entidade Produto foi carregada.
]]></system-out>
  </testcase>
</testsuite>